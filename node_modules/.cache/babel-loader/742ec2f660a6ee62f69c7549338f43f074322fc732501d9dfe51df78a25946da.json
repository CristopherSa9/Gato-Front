{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      board: [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]],\n      currentPlayer: \"X\",\n      message: \"\",\n      apiBaseUrl: \"http://127.0.0.1:3000\" // Cambia a la URL de tu API\n    };\n  },\n\n  methods: {\n    makeMove(row, col) {\n      if (this.board[row][col] === \"\" && !this.isGameOver()) {\n        axios.post(`${this.apiBaseUrl}/makeMove`, {\n          row,\n          col\n        }).then(response => {\n          if (response.data.success) {\n            this.board[row][col] = this.currentPlayer;\n            if (this.checkWinner(row, col)) {\n              this.message = `¡El jugador ${this.currentPlayer} ha ganado!`;\n            } else if (this.isBoardFull()) {\n              this.message = \"¡Es un empate!\";\n            } else {\n              this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\n            }\n          } else {\n            console.error(response.data.error);\n          }\n        });\n        /*.catch((error) => {\n          console.error(error);\n        });*/\n      }\n    },\n\n    checkWinner(row, col) {\n      const player = this.currentPlayer;\n      return this.checkRow(row, player) || this.checkColumn(col, player) || this.checkDiagonals(player);\n    },\n    checkRow(row, player) {\n      for (let i = 0; i < 3; i++) {\n        if (this.board[row][i] !== player) {\n          return false;\n        }\n      }\n      return true;\n    },\n    checkColumn(col, player) {\n      for (let i = 0; i < 3; i++) {\n        if (this.board[i][col] !== player) {\n          return false;\n        }\n      }\n      return true;\n    },\n    checkDiagonals(player) {\n      return this.board[0][0] === player && this.board[1][1] === player && this.board[2][2] === player || this.board[0][2] === player && this.board[1][1] === player && this.board[2][0] === player;\n    },\n    isBoardFull() {\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this.board[i][j] === \"\") {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n    isGameOver() {\n      return this.message !== \"\";\n    },\n    startNewGame() {\n      axios.post(`${this.apiBaseUrl}/resetGame`).then(response => {\n        if (response.data.success) {\n          // Reiniciar el juego en el frontend\n          this.board = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\n          this.currentPlayer = \"X\";\n          this.message = \"\";\n        } else {\n          console.error(\"Error al reiniciar el juego\");\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","board","currentPlayer","message","apiBaseUrl","methods","makeMove","row","col","isGameOver","post","then","response","success","checkWinner","isBoardFull","console","error","player","checkRow","checkColumn","checkDiagonals","i","j","startNewGame","catch"],"sources":["C:\\Users\\luisk\\Downloads\\tic-tac-toe-api-v2\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Tic Tac Toe</h1>\n    <div class=\"board\">\n      <div v-for=\"(row, rowIndex) in board\" :key=\"rowIndex\" class=\"row\">\n        <div\n          v-for=\"(cell, colIndex) in row\"\n          :key=\"colIndex\"\n          class=\"cell\"\n          @click=\"makeMove(rowIndex, colIndex)\"\n        >\n          {{ cell }}\n        </div>\n      </div>\n    </div>\n    <div class=\"message\">\n      <p>{{ message }}</p>\n      <button @click=\"startNewGame\">Nuevo Juego</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      board: [\n        [\"\", \"\", \"\"],\n        [\"\", \"\", \"\"],\n        [\"\", \"\", \"\"],\n      ],\n      currentPlayer: \"X\",\n      message: \"\",\n      apiBaseUrl: \"http://127.0.0.1:3000\", // Cambia a la URL de tu API\n    };\n  },\n  methods: {\n    makeMove(row, col) {\n      if (this.board[row][col] === \"\" && !this.isGameOver()) {\n        axios\n          .post(`${this.apiBaseUrl}/makeMove`, { row, col })\n          .then((response) => {\n            if (response.data.success) {\n              this.board[row][col] = this.currentPlayer;\n              if (this.checkWinner(row, col)) {\n                this.message = `¡El jugador ${this.currentPlayer} ha ganado!`;\n              } else if (this.isBoardFull()) {\n                this.message = \"¡Es un empate!\";\n              } else {\n                this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\n              }\n            } else {\n              console.error(response.data.error);\n            }\n          })\n          /*.catch((error) => {\n            console.error(error);\n          });*/\n      }\n    },\n    checkWinner(row, col) {\n      const player = this.currentPlayer;\n      return (\n        this.checkRow(row, player) ||\n        this.checkColumn(col, player) ||\n        this.checkDiagonals(player)\n      );\n    },\n    checkRow(row, player) {\n      for (let i = 0; i < 3; i++) {\n        if (this.board[row][i] !== player) {\n          return false;\n        }\n      }\n      return true;\n    },\n    checkColumn(col, player) {\n      for (let i = 0; i < 3; i++) {\n        if (this.board[i][col] !== player) {\n          return false;\n        }\n      }\n      return true;\n    },\n    checkDiagonals(player) {\n      return (\n        (this.board[0][0] === player &&\n          this.board[1][1] === player &&\n          this.board[2][2] === player) ||\n        (this.board[0][2] === player &&\n          this.board[1][1] === player &&\n          this.board[2][0] === player)\n      );\n    },\n    isBoardFull() {\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this.board[i][j] === \"\") {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n    isGameOver() {\n      return this.message !== \"\";\n    },\n    startNewGame() {\n      axios\n        .post(`${this.apiBaseUrl}/resetGame`)\n        .then((response) => {\n          if (response.data.success) {\n            // Reiniciar el juego en el frontend\n            this.board = [\n              [\"\", \"\", \"\"],\n              [\"\", \"\", \"\"],\n              [\"\", \"\", \"\"],\n            ];\n            this.currentPlayer = \"X\";\n            this.message = \"\";\n          } else {\n            console.error(\"Error al reiniciar el juego\");\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  text-align: center;\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  margin-top: 30px;\n}\n\n.board {\n  display: inline-block;\n  border: 2px solid #333;\n}\n\n.row {\n  display: flex;\n}\n\n.cell {\n  width: 100px;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2em;\n  cursor: pointer;\n  border: 1px solid #ccc;\n}\n\n.message {\n  margin-top: 20px;\n  font-size: 1.5em;\n}\n\nbutton {\n  font-size: 1em;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}