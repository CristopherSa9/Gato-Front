{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      board: [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]],\n      ID_Game: null,\n      Player: null,\n      message: \"\",\n      apiBaseUrl: \"https://46i3aj7hn3.execute-api.us-east-1.amazonaws.com\" // Cambia a la URL de tu API\n    };\n  },\n\n  methods: {\n    makeMove(rowIndex, colIndex) {\n      if (this.ID_Game != null) {\n        if (this.board[rowIndex][colIndex] === \"\") {\n          axios.get(`${this.apiBaseUrl}/game/${this.ID_Game}`).then(response => {\n            console.log(response.data[\"Game\"]);\n          });\n          const move = {\n            row: rowIndex.toString(),\n            col: colIndex.toString(),\n            player: this.Player // Enviar el jugador actual con la solicitud\n          };\n\n          axios.put(`${this.apiBaseUrl}/makeMove/${this.ID_Game}`, move).then(response => {\n            console.log(response.data);\n            if (response.data[\"Valido\"] === \"Movimiento valido.\") {\n              this.board[rowIndex][colIndex] = this.Player;\n              if (this.checkWinner(this.Player)) {\n                this.message = `¡El jugador ${this.Player} ha ganado!`;\n              } else if (this.checkDraw()) {\n                this.message = \"¡Es un empate!\";\n              } else {\n                this.Player = this.Player === \"X\" ? \"O\" : \"X\"; // Cambiar al siguiente jugador\n              }\n            }\n          });\n        } else {\n          alert(\"La celda ya está ocupada\");\n        }\n      } else {\n        alert(\"Inicia un juego primero\");\n      }\n    },\n    checkWinner(player) {\n      const winPatterns = [\n      // Filas\n      [[0, 0], [0, 1], [0, 2]], [[1, 0], [1, 1], [1, 2]], [[2, 0], [2, 1], [2, 2]],\n      // Columnas\n      [[0, 0], [1, 0], [2, 0]], [[0, 1], [1, 1], [2, 1]], [[0, 2], [1, 2], [2, 2]],\n      // Diagonales\n      [[0, 0], [1, 1], [2, 2]], [[0, 2], [1, 1], [2, 0]]];\n      for (const pattern of winPatterns) {\n        const [a, b, c] = pattern;\n        if (this.board[a[0]][a[1]] === player && this.board[b[0]][b[1]] === player && this.board[c[0]][c[1]] === player) {\n          return true; // Jugador actual ha ganado\n        }\n      }\n\n      return false; // Nadie ha ganado todavía\n    },\n\n    checkDraw() {\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this.board[i][j] === \"\") {\n            return false; // Todavía hay celdas vacías, no es un empate\n          }\n        }\n      }\n\n      return true; // Todas las celdas están ocupadas, es un empate\n    },\n\n    startGame() {\n      axios.get(`${this.apiBaseUrl}/get-id`).then(response => {\n        this.ID_Game = response.data[\"New Game\"];\n        this.Player = \"X\"; // Inicializar el jugador actual como \"X\"\n      }).then(() => {\n        axios.put(`${this.apiBaseUrl}/game/${this.ID_Game}`).then(response => {\n          console.log(response.data);\n          alert(`Juego iniciado.`);\n        });\n      });\n    },\n    restartGame() {\n      axios.put(`${this.apiBaseUrl}/resetGame/${this.ID_Game}`).then(response => {\n        if (response.data[\"Valido\"] == \"Juego reiniciado\") {\n          this.message = '';\n          this.board = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\n          alert(\"Juego reiniciado\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","board","ID_Game","Player","message","apiBaseUrl","methods","makeMove","rowIndex","colIndex","get","then","response","console","log","move","row","toString","col","player","put","checkWinner","checkDraw","alert","winPatterns","pattern","a","b","c","i","j","startGame","restartGame"],"sources":["C:\\Users\\luisk\\Downloads\\Gato-Front\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>Tic Tac Toe</h1>\r\n    <div class=\"board\">\r\n      <div v-for=\"(row, rowIndex) in board\" :key=\"rowIndex\" class=\"row\">\r\n        <div\r\n          v-for=\"(cell, colIndex) in row\"\r\n          :key=\"colIndex\"\r\n          class=\"cell\"\r\n          @click=\"makeMove(rowIndex, colIndex)\"\r\n        >\r\n          {{ cell }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"message\">\r\n      <p :class=\"{ 'alert': message !== '' }\">{{ message }}</p>\r\n      <button @click=\"startGame\">Nuevo Juego</button>\r\n      <button @click=\"restartGame\">Reiniciar Juego</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      board: [\r\n        [\"\", \"\", \"\"],\r\n        [\"\", \"\", \"\"],\r\n        [\"\", \"\", \"\"],\r\n      ],\r\n      ID_Game: null,\r\n      Player: null,\r\n      message: \"\",\r\n      apiBaseUrl: \"https://46i3aj7hn3.execute-api.us-east-1.amazonaws.com\", // Cambia a la URL de tu API\r\n    };\r\n  },\r\n  methods: {\r\n    makeMove(rowIndex, colIndex) {\r\n      if (this.ID_Game != null) {\r\n        if (this.board[rowIndex][colIndex] === \"\") {\r\n          axios\r\n            .get(`${this.apiBaseUrl}/game/${this.ID_Game}`)\r\n            .then((response) => {\r\n              console.log(response.data[\"Game\"]);\r\n            });\r\n\r\n          const move = {\r\n            row: rowIndex.toString(),\r\n            col: colIndex.toString(),\r\n            player: this.Player, // Enviar el jugador actual con la solicitud\r\n          };\r\n\r\n          axios\r\n            .put(`${this.apiBaseUrl}/makeMove/${this.ID_Game}`, move)\r\n            .then((response) => {\r\n              console.log(response.data);\r\n              if (response.data[\"Valido\"] === \"Movimiento valido.\") {\r\n                this.board[rowIndex][colIndex] = this.Player;\r\n\r\n                if (this.checkWinner(this.Player)) {\r\n                  this.message = `¡El jugador ${this.Player} ha ganado!`;\r\n                } else if (this.checkDraw()) {\r\n                  this.message = \"¡Es un empate!\";\r\n                } else {\r\n                  this.Player = this.Player === \"X\" ? \"O\" : \"X\"; // Cambiar al siguiente jugador\r\n                }\r\n              }\r\n            });\r\n        } else {\r\n          alert(\"La celda ya está ocupada\");\r\n        }\r\n      } else {\r\n        alert(\"Inicia un juego primero\");\r\n      }\r\n    },\r\n\r\n    checkWinner(player) {\r\n  const winPatterns = [\r\n    // Filas\r\n    [[0, 0], [0, 1], [0, 2]],\r\n    [[1, 0], [1, 1], [1, 2]],\r\n    [[2, 0], [2, 1], [2, 2]],\r\n    // Columnas\r\n    [[0, 0], [1, 0], [2, 0]],\r\n    [[0, 1], [1, 1], [2, 1]],\r\n    [[0, 2], [1, 2], [2, 2]],\r\n    // Diagonales\r\n    [[0, 0], [1, 1], [2, 2]],\r\n    [[0, 2], [1, 1], [2, 0]],\r\n  ];\r\n\r\n  for (const pattern of winPatterns) {\r\n    const [a, b, c] = pattern;\r\n    if (\r\n      this.board[a[0]][a[1]] === player &&\r\n      this.board[b[0]][b[1]] === player &&\r\n      this.board[c[0]][c[1]] === player\r\n    ) {\r\n      return true; // Jugador actual ha ganado\r\n    }\r\n  }\r\n\r\n  return false; // Nadie ha ganado todavía\r\n},\r\n\r\n    checkDraw() {\r\n      for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          if (this.board[i][j] === \"\") {\r\n            return false; // Todavía hay celdas vacías, no es un empate\r\n          }\r\n        }\r\n      }\r\n      return true; // Todas las celdas están ocupadas, es un empate\r\n    },\r\n\r\n    startGame() {\r\n      axios\r\n        .get(`${this.apiBaseUrl}/get-id`)\r\n        .then((response) => {\r\n          this.ID_Game = response.data[\"New Game\"];\r\n          this.Player = \"X\"; // Inicializar el jugador actual como \"X\"\r\n        })\r\n        .then(() => {\r\n          axios\r\n            .put(`${this.apiBaseUrl}/game/${this.ID_Game}`)\r\n            .then((response) => {\r\n              console.log(response.data);\r\n              alert(`Juego iniciado.`);\r\n            });\r\n        });\r\n    },\r\n\r\n    restartGame() {\r\n      axios\r\n        .put(`${this.apiBaseUrl}/resetGame/${this.ID_Game}`)\r\n        .then((response) => {\r\n          if (response.data[\"Valido\"] == \"Juego reiniciado\") {\r\n            this.message = '';\r\n            this.board = [\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n            ];\r\n            alert (\"Juego reiniciado\");\r\n          }\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  background: linear-gradient(135deg, #752aa3, #be90db);\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n}\r\n\r\n#app h1 {\r\n  font-size: 5em; /* Ajusta el tamaño de la fuente según tus preferencias */\r\n  color: #ccc;\r\n}\r\n\r\n.board {\r\n  display: inline-block;\r\n  border: 2px solid #333;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  width: 300px;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n}\r\n\r\n.cell {\r\n  width: 100px;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 2em;\r\n  cursor: pointer;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.message {\r\n  margin-top: 20px;\r\n  font-size: 1.5em;\r\n}\r\n\r\nbutton {\r\n  font-size: 1em;\r\n  padding: 10px 20px;\r\n  background-color: black;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #333;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}